Deno, The next-generation JavaScript runtimeModulesStandard LibraryThird Party ModulesNPMDocsRuntime ManualRuntime APIDeploy DocsStandard LibraryDeno by ExampleDeployCommunityDiscordGitHubTwitterYouTubeMastodonSearch...‚åò KDeno v1.36.4Free & open sourceNext-generation JavaScript RuntimeSecure by defaultNative support for TypeScript and JSXTesting, linting, formatting, and more out of the boxHigh performance async I/O with Rust and TokioBackwards compatible with Node.js and npmInstall NowDocs90k+ Stars on Github250k+ Active developersTrusted ByUpgrade from Node.js to DenoDeno features improved security, performance, and developer experience compared to its predecessor. It's a great time to upgrade your Node.js project to run on Deno.From Node.js to DenoMillions of community modulesMillions of community modulesBuilt on V8 JavaScript engineBuilt on V8 JavaScript engineRuntime security by defaultNo granular runtime securityBuilt-in TypeScript, JSX, formatter, linter, and testingDozens of dependencies and config files for dev toolsEasily embeddable with Rust and TokioMore complex embedding process with C++Built with web standard APIsIncomplete web API coverageComprehensive standard libraryLimited standard libraryTerminal.appmain.tsimport { Configuration, OpenAIApi } from "npm:openai@3";

const configuration = new Configuration({
  apiKey: Deno.env.get("OPENAI_API_KEY"),
});
const openai = new OpenAIApi(configuration);

const chatCompletion = await openai.createChatCompletion({
  model: "gpt-3.5-turbo",
  messages: [{ role: "user", content: "Hello world" }],
});
console.log(chatCompletion?.data?.choices[0]?.message?.content);Secure by defaultDeno restricts access to sensitive runtime APIs by default, protecting your infrastructure from malicious code.Configure granular access to the filesystem, network, and system environment, so your code only has access to the resources it needs.Security in Deno‚ÄúWhat stood out first and foremost to our team was their laser focus on security... like the ability to execute code with limited access to the file system or external domains.‚ÄùTypeScript out of the boxDeno natively supports modern JavaScript extensions like TypeScript and JSX without a build step or extra configuration.TypeScript in DenoNative TypeScript support with zero configUse bleeding edge JavaScript featuresIntellisense and auto-complete in Visual Studio CodePublish and distribute modules as TypeScript source codeEssential dev tools built inStandalone executablesInstantly create standalone executables from your Deno program. It even supports cross-compiling for other platforms! Learn moreabout the Deno compiler$ deno compile --allow-net server.ts
Compile file:///tmp/server.ts to server
$ ./server
Listening on http://localhost:8000/// server.ts
Deno.serve(() => new Response("Hello!"));Test runnerDeno provides a test runner and assertion libraries as a part of the runtime and standard library. Learn moreabout testing$ deno test main_test.ts// main_test.ts
Deno.test("1 + 2 = 3", () => {
  const x = 1 + 2;
  console.assert(x == 3);
});Code formatterDeno's built-in code formatter (based on dprint) beautifies JavaScript, TypeScript, JSON, and Markdown. Learn moreabout Deno's built-in code formatting$ deno fmt --line-width=120Code linterDeno ships with a built-in code linter to help you avoid bugs and code rot. Learn moreabout Deno's linter$ deno lint --watchSee all dev toolsBuilt for the cloudWhether you deploy with our lightning-fast Deno Deploy or on other cloud providers, Deno streamlines your experience. It's more than a runtime; it's JavaScript reimagined for the cloud age, offering a seamless alternative to traditional containers.Deno DeployThe easiest way to host your Deno projects.Globally distributedDeploy in secondsBuilt-in key/value databaseIntegrate with GitHub for CI/CDRun static sites, apps, and edge functionsTry Deno DeployAlso runs on:DockerOfficial Docker imageAWS Lambda distributionhayd/deno-lambdaDigitalOceanHow to Deploy Deno to Digital OceanFly.ioRun a Deno App - Fly.io DocsCloudflareskymethod/denoflareAzureanthonychu/azure-functions-deno-workerGoogle Cloud RunHow to Deploy to Google Cloud RunWritableStreamDefaultWriterperformancePromiseRejectionEventRequestReadableStreamDefaultReaderAbortSignalCacheStoragefetchSubtleCryptosetTimeoutCompressionStreamDedicatedWorkerGlobalScopeByteLengthQueuingStrategyStorageDOMExceptionWebSocketURLSearchParamsMessageEventTextDecoderStreamURLatobPerformanceWorkerGlobalScopeHeadersErrorEventWorkerFileProgressEventReadableByteStreamControllerEventTargetMessageChannelclearTimeoutTextEncoderStreamclearIntervalResponseBroadcastChannelwindow.close()BlobMessagePortWebAssemblyAbortControllerWorkerNavigatorFormDataqueueMicrotaskDecompressionStreamTextDecodercryptostructuredClonelocalStorageURLPatternWorkerLocationPerformanceMarkTransformStreamPerformanceEntryconsolecachesCryptoCustomEventTransformStreamDefaultControllerReadableStreamBYOBReaderwindow.alert()PerformanceMeasureCacheFileReaderCryptoKeyNavigatorWindowLocationEventResponse.json()WritableStreamDefaultControllerReadableStreamDefaultControllersetIntervalCloseEventWorkerBeforeUnloadEventReadableStreamBYOBRequestTextEncoderbtoaReadableStreamWritableStreamConsistent code from browser to backendDeno provides web standard APIs whenever possible, maximizing code reuse between browser and server and future-proofing your code.Deno actively participates in TC39 and WinterCG, to help move the web forward. We're committed to building the future of JavaScript collaboratively and in the open.Web APIs in DenoHigh performance networking// Ryan Dahl's favorite one-line web server
Deno.serve((req) => new Response("Hello world"));Out of the box support for:HTTPS (encryption)WebSocketsHTTP2Automatic response body compressionHTTP server documentationThroughput, requests per sec(bigger is better)Requests per second of 'hello world' web servers in Deno 1.36.1 and Node 18.12.1 measured with wrk on a Linux 8 core Intel Xeon E-2378G machine.import express from "npm:express@4";

const app = express();

app.get("/", function (_req, res) {
  res.send("hello");
});

app.listen(3000, () => {
  console.log("Express listening on :3000");
});Millions of community modulesDeno is backwards compatible with Node.js built-in APIs and over two million modules on npm. Bring the best of the Node.js ecosystem with you to Deno.Node and npm supportDive into Deno codeDeno.serve((req) => {
  if (req.headers.get("upgrade") != "websocket") {
    return new Response(null, { status: 501 });
  }
  const { socket, response } = Deno.upgradeWebSocket(req);
  socket.addEventListener("open", () => {
    console.log("a client connected!");
  });
  socket.addEventListener("message", (event) => {
    if (event.data === "ping") {
      socket.send("pong");
    }
  });
  return response;
});Websocket serverHTTP ServerHTTP requests with fetch()Connect to PostgreSQLLog with colorsImport npm packageImport Node.js built-in modulesZero config TypeScript supportBuilt-in key/value databaseWriting/reading a fileConnecting to a TCP socketWriting a testWriting a benchmarkWebsocket serverHTTP ServerHTTP requests with fetch()Connect to PostgreSQLLog with colorsImport npm packageImport Node.js built-in modulesZero config TypeScript supportBuilt-in key/value databaseWriting/reading a fileConnecting to a TCP socketWriting a testWriting a benchmarkMore examplesSeamless persistence with Deno KVBetaThe Deno runtime ships with Deno KV, a key/value database designed for globally distributed applications.Go from development to production on Deno Deploy with no API keys or infrastructure to configure.Learn about KVFresh - modern web apps on the edgeFresh is a modern web framework, designed from the ground up for the Deno runtime on edge servers.Built for speed, reliability, and simplicityJust-in-time rendering at the edgeIsland-based client hydration for maximum interactivityZero runtime overhead - no JavaScript is sent to the client by defaultStart building üçãSaaSKit - quick start template for FreshBuilt on top of Fresh, the SaaSKit template app includes authentication, billing, and more.User authentication with oAuth 2.0Recurring payments implemented with StripeSessions and authorization pre-builtFast, lightweight persistence with Deno KVStart with a template ¬†üöÄVibrant CommunityManu (Qwik)I know this was gonna happen!Deno is truly building the fastest, most secure and personalizable JS runtime!AtalockeI really think Deno is the easiest and most capable JS runtime. URL imports are slept on.Jason Lengstorfnpm packages in Deno üëÄThat‚Äôs an exciting development for those of us building at the edge.Poorly Funded SnobThis Deno thing is fast, no doubt about it. #denolandTaylor YoungDeno: I have to use the browser APIs cause they are everywhere, and everywhere is my target runtime (the web). The runtime that tries to mirror browser APIs server side makes my life easiest.Stefan ArentzDeno is fantastic. I am using it to level up a bit in terms of JavaScript and TypeScript and it is the easiest way to get going. Their tooling is like 100x simpler than all the usual Node stacks.Wes BosDeno's security model is PERFECT for this type of script.Running a script from a rando off the internet? It asks for read access to only the CWD and then asks for access to the file it wants to write to. üëè @deno_landCarlos Vazquez üá≤üáΩI've just upgraded to 1.6.0 | I love Deno not only for freeing us all from npm but for using Typescript / javaScript as default runtimes. But to top it all off, one can upgrade it in the simplest, fastest way. Deno is making me love Typescript and javaScript again ü¶ïü¶ïü¶ïReady to get started with Deno?Install NowLearnNode's Security ProblemNode's Complexity ProblemEdge is the FutureWhy Deno?TypeScript SupportWeb Standard APIsAll-in-one ToolingSecure-by-defaultUse CasesScripts and CLIsAPI ServersSites and AppsModulesServerless FunctionsProductsDeno CLIDeno DeployDeploy SubhostingFreshSaaSKitSourcesCLI ManualCLI Runtime APIDeploy DocsStandard LibraryThird-Party ModulesExamplesCompanyCareersBlogPricingNewsMerchPrivacy PolicyCopyright ¬© 2023 Deno Land Inc. All rights reserved.GitHubDiscordTwitter or X or whateverYouTube